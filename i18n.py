# perfume-bot/i18n.py
# –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—Å–µ—Ö –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫.

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —è–∑—ã–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ---
DEFAULT_LANG = "ru"

MESSAGES = {
    "ru": {
        # --- –û–ë–©–ò–ï ---
        "button_lang_en": "English üá¨üáß",
        "button_lang_ru": "–†—É—Å—Å–∫–∏–π üá∑üá∫",
        "confirm_lang_set": "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ –†—É—Å—Å–∫–∏–π!",
        "go_back": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",

        # --- –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ---
        "menu_main_text": "üëá **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:",
        "menu_search": "üîé –ù–∞–π—Ç–∏ –ø–∞—Ä—Ñ—é–º",
        "menu_popular": "üåü –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ",
        "menu_random": "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –∞—Ä–æ–º–∞—Ç",
        "menu_history": "üìú –ú–æ—è –∏—Å—Ç–æ—Ä–∏—è",
        
        # --- –ü–û–ò–°–ö ---
        "search_prompt": "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: **–ë—Ä–µ–Ω–¥ + –ù–∞–∑–≤–∞–Ω–∏–µ**.\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: Dior Sauvage.",
        "search_again": "üîé –ò—Å–∫–∞—Ç—å –µ—â–µ",

        # --- –ü–û–ü–£–õ–Ø–†–ù–´–ï ---
        "popular_title": "üåü **–¢–æ–ø-10 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞—Ä–æ–º–∞—Ç–æ–≤**\n(–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∞–Ω–∞–ª–æ–≥–æ–≤)",

        # --- –ò–°–¢–û–†–ò–Ø ---
        "history_title": "üìú **–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–∞—Ö–æ–¥–æ–∫**",
        "history_empty": "–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!",
        
        # --- –°–õ–£–ß–ê–ô–ù–´–ô –ê–†–û–ú–ê–¢ ---
        "random_title": "üé≤ **–°–ª—É—á–∞–π–Ω—ã–π –∞—Ä–æ–º–∞—Ç –¥–Ω—è**",
        "random_again": "üé≤ –ï—â–µ –æ–¥–∏–Ω",

        # --- –°–û–û–ë–©–ï–ù–ò–Ø –ò –û–®–ò–ë–ö–ò ---
        "welcome": (
            "–ü—Ä–∏–≤–µ—Çüëã –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ **–∞–Ω–∞–ª–æ–≥–∏** –¥–æ—Ä–æ–≥–æ–≥–æ –ø–∞—Ä—Ñ—é–º–∞.\n\n"
            "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
        ),
        "error_empty_query": "–û–π, —è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ **–±—Ä–µ–Ω–¥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–æ–º–∞—Ç–∞**, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.",
        "error_brand_only": "–ö–∞–∂–µ—Ç—Å—è, –≤—ã —É–∫–∞–∑–∞–ª–∏ —Ç–æ–ª—å–∫–æ –±—Ä–µ–Ω–¥ **{brand_name}**. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—Ñ—é–º–∞.",
        "error_not_found": "–£–≤—ã, —ç—Ç–æ—Ç –∞—Ä–æ–º–∞—Ç –ø–æ–∫–∞ –º–Ω–µ –Ω–µ –∑–Ω–∞–∫–æ–º. üòÖ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑–∞–Ω—ã –±—Ä–µ–Ω–¥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.",
        "note_fuzzy_match": "–ù–∞–π–¥–µ–Ω–æ –ø–æ –Ω–µ—Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
        "followup_text": "–ö—Ä—É—Ç–æ! üéâ –ö–∞–∂–µ—Ç—Å—è, –ø–æ–∏—Å–∫ —Å—Ä–∞–±–æ—Ç–∞–ª. –ú–æ–∂–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –µ—â—ë –æ–¥–∏–Ω –∞—Ä–æ–º–∞—Ç?",
        
        # --- –§–û–†–ú–ê–¢–¢–ï–† ---
        "response_not_found_copies": (
            "–ú–Ω–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–Ω–∞–ª–æ–≥–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ü–µ–ª–∏–∫–æ–º (**–ë—Ä–µ–Ω–¥ + –ù–∞–∑–≤–∞–Ω–∏–µ**) –∏–ª–∏ –ø–æ–∏—â–∏—Ç–µ –¥—Ä—É–≥–æ–π –∞—Ä–æ–º–∞—Ç. üò£"
        ),
        "response_search_link_prefix": "–∫—É–ø–∏—Ç—å", 
        "response_close": "–ù–∞–¥–µ—é—Å—å, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –ø–æ–ª–µ–∑–Ω–æ–π! ‚ú®",
        "response_note_prefix": "**ü§ñ –í–Ω–∏–º–∞–Ω–∏–µ:** ",
        "search_query_buy_word": "–∫—É–ø–∏—Ç—å" 
    },
    
    "en": {
        # --- GENERAL ---
        "button_lang_en": "English üá¨üáß",
        "button_lang_ru": "–†—É—Å—Å–∫–∏–π üá∑üá∫",
        "confirm_lang_set": "Language switched to English!",
        "go_back": "‚¨ÖÔ∏è Back",

        # --- MAIN MENU ---
        "menu_main_text": "üëá **Main Menu**\n\nChoose what you want to do:",
        "menu_search": "üîé Find Perfume",
        "menu_popular": "üåü Popular",
        "menu_random": "üé≤ Random Scent",
        "menu_history": "üìú My History",
        
        # --- SEARCH ---
        "search_prompt": "Send me a message in the format: **Brand + Name**.\n\nFor example: Dior Sauvage.",
        "search_again": "üîé Search again",
        
        # --- POPULAR ---
        "popular_title": "üåü **Top 10 Popular Perfumes**\n(by number of dupes)",

        # --- HISTORY ---
        "history_title": "üìú **Your 5 recent finds**",
        "history_empty": "Your search history is empty. Try to find something!",
        
        # --- RANDOM SCENT ---
        "random_title": "üé≤ **Random Scent of the Day**",
        "random_again": "üé≤ Another one",

        # --- MESSAGES & ERRORS ---
        "welcome": (
            "Hey there! üëã I can help you find affordable **dupes** for expensive perfumes.\n\n"
            "Please use the menu below to navigate."
        ),
        "error_empty_query": "Oops, I didn't get anything. Please send me the **brand and name of the fragrance**.",
        "error_brand_only": "It looks like you only specified the brand **{brand_name}**. Please specify the perfume name.",
        "error_not_found": "Sorry, I don't know this fragrance yet. üòÖ Please check that the brand and name are spelled correctly, or try another one.",
        "note_fuzzy_match": "Found via fuzzy match. Please check the result.",
        "followup_text": "Awesome! üéâ It seems the search worked. Ready to try finding another perfume?",
        
        # --- FORMATTER ---
        "response_not_found_copies": (
            "I couldn't find any suitable dupes. Try entering the full details (**Brand + Name**) or search for a different fragrance. üò£"
        ),
        "response_search_link_prefix": "buy", 
        "response_close": "Hope the info was helpful! ‚ú®",
        "response_note_prefix": "**ü§ñ Attention:** ",
        "search_query_buy_word": "buy"
    }
}

def get_message(key: str, lang: str = DEFAULT_LANG) -> str:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É, –∏—Å–ø–æ–ª—å–∑—É—è —è–∑—ã–∫ –∏ –∫–ª—é—á."""
    lang = lang.lower()
    if lang not in MESSAGES:
        lang = DEFAULT_LANG
    return MESSAGES[lang].get(key, f"MISSING_STRING_KEY_{key}")