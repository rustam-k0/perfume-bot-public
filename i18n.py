# i18n.py
DEFAULT_LANG = "ru"

# –°–ª–æ–≤–∞—Ä–∏ —Å —Ç–µ–∫—Å—Ç–∞–º–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤
MESSAGES = {
    "ru": {
        "welcome": (
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –∞—Ä–æ–º–∞—Ç–æ–≤ –∏ –∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–æ–≤ (–¥—É–ø–æ–≤). "
            "–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ **—Å–∞–º—É—é –≤—ã–≥–æ–¥–Ω—É—é –∑–∞–º–µ–Ω—É** —Ç–≤–æ–µ–º—É –ª—é–±–∏–º–æ–º—É –ø–∞—Ä—Ñ—é–º—É. "
            "\n\n**1. –í—ã–±–µ—Ä–∏ —è–∑—ã–∫.**"
        ),
        "prompt_search": (
            "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å **–≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Ñ—é–º–∞ –∏ –±—Ä–µ–Ω–¥** (–Ω–∞–ø—Ä–∏–º–µ—Ä, *Dior Sauvage*)."
        ),
        "button_start": "–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫!",
        "language_changed": "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ **{lang_code}**! ‚úÖ",
        
        # --- –û—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è ---
        "error_empty_query": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—Ñ—é–º–∞ –∏ –±—Ä–µ–Ω–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞.",
        "error_not_found": "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞—Ä–æ–º–∞—Ç –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
        "error_brand_only": "–ù–∞–π–¥–µ–Ω–æ –º–Ω–æ–≥–æ –∞—Ä–æ–º–∞—Ç–æ–≤ –±—Ä–µ–Ω–¥–∞ **{brand_name}**. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–æ–º–∞—Ç–∞.",
        
        # --- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ---
        "note_fuzzy_match": "–ù–∞–π–¥–µ–Ω–æ –ø–æ –Ω–µ—Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è.",
        "note_found_by_clone": "–í—ã –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–æ–≥–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫–∞–∑–∞–Ω –¥–ª—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞.", # <--- –ù–û–í–ê–Ø –°–¢–†–û–ö–ê
        "response_note_prefix": "‚ö†Ô∏è *–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: *",
        "response_not_found_copies": "*–ê–Ω–∞–ª–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –≤–Ω–µ—Å–µ–Ω—ã –≤ –±–∞–∑—É.*",
        "response_search_link_prefix": "üîç –ü–æ–∏—Å–∫",
        "response_price_line": "–¶–µ–Ω–∞: {price} ‚Ç¨ | –≠–∫–æ–Ω–æ–º–∏—è: {saved_amount}%",
        "response_footer": "–ù–∞—à–ª–∏, —á—Ç–æ –∏—Å–∫–∞–ª–∏? –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ –∞—Ä–æ–º–∞—Ç–∞!",
        "search_query_buy_word": "–∫—É–ø–∏—Ç—å",
        
        # --- Follow-up ---
        "followup_message": "–í—ã –Ω–∞—à–ª–∏, —á—Ç–æ –∏—Å–∫–∞–ª–∏? –ú–æ–∂–µ—Ç, —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –¥—Ä—É–≥–æ–π –∞—Ä–æ–º–∞—Ç?",
        "followup_button": "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫",
    },
    
    "en": {
        "welcome": (
            "Hi! I'm a bot designed to find original fragrances and their popular dupes (clones). "
            "I'll help you find the **best value replacement** for your favorite perfume. "
            "\n\n**1. Select your language.**"
        ),
        "prompt_search": (
            "Great! Now **enter the name of the original perfume and the brand** (e.g., *Dior Sauvage*)."
        ),
        "button_start": "Start searching!",
        "language_changed": "Language changed to **{lang_code}**! ‚úÖ",
        
        # --- Errors and warnings ---
        "error_empty_query": "Please enter the perfume name and brand to search.",
        "error_not_found": "Sorry, I couldn't find the fragrance you were looking for. Try entering the exact name.",
        "error_brand_only": "I found many fragrances from the brand **{brand_name}**. Please add the name of the fragrance.",
        
        # --- Results and formatting ---
        "note_fuzzy_match": "Found via fuzzy match. Please check the name for accuracy.",
        "note_found_by_clone": "You entered the name of a dupe. The result is shown for the original fragrance.", # <--- –ù–û–í–ê–Ø –°–¢–†–û–ö–ê
        "response_note_prefix": "‚ö†Ô∏è *Warning: *",
        "response_not_found_copies": "*No dupes found or they are not in our database.*",
        "response_search_link_prefix": "üîç Search",
        "response_price_line": "Price: {price} ‚Ç¨ | Savings: {saved_amount}%",
        "response_footer": "Found what you needed? Just send me the name of another fragrance!",
        "search_query_buy_word": "buy",
        
        # --- Follow-up ---
        "followup_message": "Did you find what you were looking for? Maybe you want to search for another scent?",
        "followup_button": "Search again",
    }
}

def get_message(key, lang=DEFAULT_LANG):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É."""
    if lang not in MESSAGES:
        # Fallback to default language if selected language is not found
        lang = DEFAULT_LANG
    return MESSAGES[lang].get(key, MESSAGES[DEFAULT_LANG].get(key, f"MISSING_MESSAGE_KEY:{key}"))